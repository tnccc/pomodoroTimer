$val: .5rem;
$desktopScreenSize: 1280px;
$tabletWidthScreenSize: 1024px;
$tabletHeightScreenSize: 768px;
$mobileScreenSize: 480px;

@mixin mediaScreen($range) {
  @if $range == 'desktop' {
    @media all and (min-width: $tabletWidthScreenSize) and (max-width: $desktopScreenSize) {
      @content;
    }
  } @else if $range == 'tablet' {
    @media all and (min-width: $mobileScreenSize) and (max-width: $tabletWidthScreenSize) {
      @content;
    }
  } @else if $range == 'tabletLandscape' {
    @media all and (min-width: $tabletHeightScreenSize) and (max-width: $tabletWidthScreenSize) {
      @content;
    }
  } @else if $range == 'tabletVertical' {
    @media all and (min-width: $mobileScreenSize) and (max-width: $tabletHeightScreenSize) {
      @content;
    }
  } @else if $range == 'mobile' {
    @media all and (max-width: $mobileScreenSize) {
      @content;
    }
  }
}

$zIndexMap: (
  'over': 200,
  'max': 100,
  'nav': 80,
  'overlay': 70,
  'contents': 50,
  'off': -1,
) !default;

@function zIndex($key) {
  @return map-get($zIndexMap, $key);
}

//ブレイクポイント指定
$breakpoint-sm: 400px !default;
$breakpoint-md: 768px !default;
$breakpoint-lg: 1000px !default;

$breakpoints: (
  'sm': 'screen and (max-width: 400px)',
  'md': 'screen and (max-width: 768px)',
  'lg': 'screen and (max-width: 1000px)',
  'xl': 'screen and (max-width: 1200px)',
) !default;

@mixin mq($breakpoint: md) {
  @media #{map-get($breakpoints, $breakpoint)} {
    @content;
  }
}

//横幅に対して余白を取る
@function viewMargin($contents, $margin) {
  $value: (calc(100vw / $contents * $margin));
  @return #{$value};
}

//自作clamp関数
@function clampFunc($min, $default, $max, $bp: 1920) {
  $min: $min * 1;
  $max: $max * 1;
  $num: $min / $bp * 100;
  $base: #{$num};
  @return clamp(#{$min}px, #{$base}vw, #{$max}px)
}